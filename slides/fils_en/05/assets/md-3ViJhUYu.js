import{o as r,c as u,k as o,e,B as l,q as c,s as i,C as n}from"./modules/vue-CfOVo5sz.js";import{I as d}from"./slidev/default-C-Uktp1O.js";import{u as h,f as m}from"./slidev/context-CS2xqH0l.js";import"./index-C4d0Pr1U.js";import"./modules/shiki-BCAiZ4dZ.js";const $={__name:"slides.md__slidev_29",setup(p){const{$slidev:b,$nav:y,$clicksContext:s,$clicks:f,$page:g,$renderContext:C,$frontmatter:a}=h();return s.setup(),(_,t)=>(r(),u(d,c(i(n(m)(n(a),28))),{default:o(()=>t[0]||(t[0]=[e("h1",null,"Channels",-1),e("p",null,"send data from a task to another",-1),e("p",null,[l("Embassy provides four types of channels synchronized using "),e("code",null,"Mutex"),l("s")],-1),e("table",null,[e("thead",null,[e("tr",null,[e("th",null,"Type"),e("th",null,"Description")])]),e("tbody",null,[e("tr",null,[e("td",null,[e("a",{href:"https://docs.embassy.dev/embassy-sync/git/default/channel/struct.Channel.html",target:"_blank"},[e("code",null,"Channel")])]),e("td",null,"A Multiple Producer Multiple Consumer (MPMC) channel. Each message is only received by a single consumer.")]),e("tr",null,[e("td",null,[e("a",{href:"https://docs.embassy.dev/embassy-sync/git/default/priority_channel/struct.PriorityChannel.html",target:"_blank"},[e("code",null,"PriorityChannel")])]),e("td",null,"A Multiple Producer Multiple Consumer (MPMC) channel. Each message is only received by a single consumer. Higher priority items are shifted to the front of the channel.")]),e("tr",null,[e("td",null,[e("a",{href:"https://docs.embassy.dev/embassy-sync/git/default/pubsub/struct.PubSubChannel.html",target:"_blank"},[e("code",null,"Signal")])]),e("td",null,"Signalling latest value to a single consumer.")]),e("tr",null,[e("td",null,[e("a",{href:"https://docs.embassy.dev/embassy-sync/git/default/signal/struct.Signal.html",target:"_blank"},[e("code",null,"PubSubChannel")])]),e("td",null,"A broadcast channel (publish-subscribe) channel. Each message is received by all consumers.")])])],-1)])),_:1},16))}};export{$ as default};
