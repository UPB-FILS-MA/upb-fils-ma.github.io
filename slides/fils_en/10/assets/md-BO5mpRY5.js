import{_ as o}from"./slidev/CodeBlockWrapper.vue_vue_type_script_setup_true_lang-m7DbsUbo.js";import{o as h,c as k,k as t,e as s,l as p,m as d,B as e,q as m,s as u,C as l}from"./modules/vue-CCYl-6Lk.js";import{I as c}from"./slidev/default-BC7Zf2F4.js";import{u as g,f}from"./slidev/context-Chd1uigI.js";import"./modules/unplugin-icons-BM09G0Fu.js";import"./index-BgSY_JxC.js";import"./modules/shiki-KdnwFYrY.js";const V={__name:"slides.md__slidev_30",setup(y){const{$slidev:B,$nav:v,$clicksContext:a,$clicks:A,$page:b,$renderContext:_,$frontmatter:r}=g();return a.setup(),(C,i)=>{const n=o;return h(),k(c,m(u(l(f)(l(r),29))),{default:t(()=>[i[1]||(i[1]=s("h1",null,"5: Memop",-1)),i[2]||(i[2]=s("p",null,"Memop expands the memory segment available to the process, allows the process to retrieve pointers to its allocated memory space, provides a mechanism for the process to tell the kernel where its stack and heap start, and other operations involving process memory.",-1)),p(n,d({lines:!1},{ranges:["*"]}),{default:t(()=>i[0]||(i[0]=[s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[s("code",{class:"language-rust"},[s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#80A665","--shiki-light":"#59873A"}},"memop"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"("),s("span",{style:{"--shiki-dark":"#BD976A","--shiki-light":"#B07D48"}},"op_type"),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},":"),s("span",{style:{"--shiki-dark":"#5DA994","--shiki-light":"#2E8F82"}}," u32"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},","),s("span",{style:{"--shiki-dark":"#BD976A","--shiki-light":"#B07D48"}}," argument"),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},":"),s("span",{style:{"--shiki-dark":"#5DA994","--shiki-light":"#2E8F82"}}," u32"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},")"),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," ->"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}}," [["),s("span",{style:{"--shiki-dark":"#C99076","--shiki-light":"#A65E2B"}}," VARIES"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}}," ]]"),s("span",{style:{"--shiki-dark":"#4D9375","--shiki-light":"#1E754F"}}," as"),s("span",{style:{"--shiki-dark":"#5DA994","--shiki-light":"#2E8F82"}}," u32")])])],-1)])),_:1},16),i[3]||(i[3]=s("div",{grid:"~ cols-2 gap-3"},[s("div",null,[s("p",null,[s("strong",null,"Arguments")]),s("ul",null,[s("li",null,[s("code",null,"op_type"),e(": An integer indicating whether this is a "),s("code",null,"brk"),e(" (0), a "),s("code",null,"sbrk"),e(" (1), or another memop call.")]),s("li",null,[s("code",null,"argument"),e(": The argument to "),s("code",null,"brk"),e(", "),s("code",null,"sbrk"),e(", or other call.")])]),s("p",null,[e("Each memop operation is specific and details of each call can be found in the "),s("a",{href:"https://github.com./tock/blob/master/doc/syscalls/memop.md",target:"_blank"},"memop syscall documentation"),e(".")])]),s("div",null,[s("p",null,[s("strong",null,"Return")]),s("ul",null,[s("li",null,[e("Dependent on the particular "),s("em",null,"memop"),e(" call.")])])])],-1))]),_:1},16)}}};export{V as default};
