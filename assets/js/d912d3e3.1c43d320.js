"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4064],{19332:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>h});var i=r(17624),n=r(4552);const s={},a="Snakes and Apples",o={id:"project/2024/matei.radu2105/index",title:"Snakes and Apples",description:"My project has the goal of using a Raspberry Pi to simulate the old video game Snake.",source:"@site/docs/project/2024/matei.radu2105/index.md",sourceDirName:"project/2024/matei.radu2105",slug:"/project/2024/matei.radu2105/",permalink:"/docs/project/2024/matei.radu2105/",draft:!1,unlisted:!1,editUrl:"https://github.com/UPB-FILS-MA/upb-fils-ma.github.io/edit/main/docs/project/2024/matei.radu2105/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ferrari Line Follower and Obstacle Avoider Car",permalink:"/docs/project/2024/maria.ionescu/"},next:{title:"RUST TICTACTOE (+Wireless Control)",permalink:"/docs/project/2024/matei_teodor.petrec/"}},d={},h=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 6 - 12 May",id:"week-6---12-may",level:3},{value:"Week 7 - 19 May",id:"week-7---19-may",level:3},{value:"Week 20 - 26 May",id:"week-20---26-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function c(e){const t={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"snakes-and-apples",children:"Snakes and Apples"}),"\n",(0,i.jsx)(t.p,{children:"My project has the goal of using a Raspberry Pi to simulate the old video game Snake."}),"\n",(0,i.jsxs)(t.admonition,{type:"info",children:[(0,i.jsx)(t.mdxAdmonitionTitle,{}),(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Author"}),": Radu Matei ",(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.strong,{children:"GitHub Project Link"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/UPB-FILS-MA/project-matei7-7",children:"https://github.com/UPB-FILS-MA/project-matei7-7"})]})]}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:'In my project I want to recreate the original game simply known as "Snake" on a Raspberry Pi,\nusing an LCD display as a screen and four buttons as the movements of the player-controlled snake.\nThe fifth and final button will only be for starting the game. The game consists\nof a snake that can move up, left, down or right and of randomly generating apples that the snake\nhas to eat in order to get bigger and, therefore, gain a higher score. The display will work using\nEmbedded-graphics, displaying for the whole duration of the game the game area, where apples can spawn\nand the player can move to get them, and at the top, separated from the rest of the game, there will\nbe a score counter and a current high score. The game stops when the snake collides with its own head\nor one of the borders. During the game, buzzers will be used to create sound effects when gaining score\nor dying, and for the background music.'}),"\n",(0,i.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,i.jsx)(t.p,{children:"Ever since I was a child, I have been playing video games - from the first ever look over my dad's shoulder to see\nwhat he was doing on the computer I was hooked. I've been playing them my whole life ever since, and since\nhigh school, where I discovered coding and that I was very good at it, my dream became very clear to me:\ncreating video games. I have done my fair share of coding problems and even games in Unity, and the\nsoftware part is what I really love. And now, I have the opportunity to make a game, code it, and\nthen make a physical machine that will run my game. Physically. That sounds amazing and, even if\nhardware is not really my specialty, I will do my best to make the best game I can."}),"\n",(0,i.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Project_architecture",src:r(47044).c+"",width:"1534",height:"863"})}),"\n",(0,i.jsx)(t.h2,{id:"log",children:"Log"}),"\n",(0,i.jsx)(t.h3,{id:"week-6---12-may",children:"Week 6 - 12 May"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"created index.md"}),"\n",(0,i.jsx)(t.li,{children:"made a prototype of the KiCad schematic"}),"\n",(0,i.jsx)(t.li,{children:"starting to experiment with cardboard boxes and other things that could be used as a cover for the wiring and the hardware"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"week-7---19-may",children:"Week 7 - 19 May"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"ordered the physical pieces"}),"\n",(0,i.jsx)(t.li,{children:"assembled them on a breadboard"}),"\n",(0,i.jsx)(t.li,{children:"didn't find my LCD as a KiCad component, not even with Mouser's site, so made my own custom LCD using KiCad"}),"\n",(0,i.jsx)(t.li,{children:"finalized KiCad schematic"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"week-20---26-may",children:"Week 20 - 26 May"}),"\n",(0,i.jsx)(t.h2,{id:"hardware",children:"Hardware"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Raspberry Pi Pico W ",(0,i.jsx)(t.br,{}),"\n","A microcontroller for the project - takes input from the buttons and displays the game scene accordingly"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["LCD Display ",(0,i.jsx)(t.br,{}),"\n","A display that shows a grid for the snake to move through, the snake, the apples, and at the top the score and the current high score - microcontroller takes care of the software and displays it on the LCD ST7735"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Buzzer/Buzzers ",(0,i.jsx)(t.br,{}),"\n","These are used for background music and sound effects when dying, gaining score and when achieving a high-score - microcontroller sends signals when a specific event happens"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Buttons ",(0,i.jsx)(t.br,{}),"\n","These are used to control the snake - they are put in a N/W/S/E formation and represent every movement that the player can do; the fifth button is just for starting the game - these send signals to the microcontroller"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This is the current prototype of my project, changes are 100% going to happen - a mask is going to be put to hide the hardware and the screen + the buttons will be moved to a separate breadboard to be more easily accessed for the user:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Project_seen_from_above",src:r(82748).c+"",width:"3000",height:"4000"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Project_seen_from_one_side",src:r(97968).c+"",width:"4000",height:"3000"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Project_seen_from_the_other_side",src:r(48588).c+"",width:"4000",height:"3000"})}),"\n",(0,i.jsx)(t.h3,{id:"schematics",children:"Schematics"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"KiCad",src:r(49548).c+"",width:"917",height:"774"})}),"\n",(0,i.jsx)(t.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Device"}),(0,i.jsx)(t.th,{children:"Usage"}),(0,i.jsx)(t.th,{children:"Price"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/raspberry-pi-pico.html",children:"Rapspberry Pi Pico W"})}),(0,i.jsx)(t.td,{children:"The microcontroller"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/raspberry-pi-boards/12394-raspberry-pi-pico-w.html",children:"35 RON"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/index.php?controller=attachment&id_attachment=196",children:"LCD SPI Display"})}),(0,i.jsx)(t.td,{children:"The display - ST7735"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/optoelectronice-lcd-uri/870-modul-lcd-144.html",children:"30 RON"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://components101.com/misc/buzzer-pinout-working-datasheet",children:"3.3V Buzzer"})}),(0,i.jsx)(t.td,{children:"Buzzers for sound effects and background music"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/audio-buzzere/12247-buzzer-pasiv-de-33v-sau-3v.html",children:"2 RON / Buzzer"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Buttons"}),(0,i.jsx)(t.td,{children:"4 Buttons for the movement buttons + 1 Button for ON switch"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/butoane-i-comutatoare/1119-buton-6x6x6.html",children:"2 RON"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Wires"}),(0,i.jsx)(t.td,{children:"Wires for connecting the hardware"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/fire-fire-mufate/884-set-fire-tata-tata-40p-10-cm.html",children:"7 RON"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Bredboard"}),(0,i.jsx)(t.td,{children:"Bredboard for connecting the hardware"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/prototipare-breadboard-uri/8-breadboard-830-points.html",children:"10 RON"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Resistors"}),(0,i.jsx)(t.td,{children:"Resistors"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/componente-electronice-rezistoare/848-rezistor-025w-22k.html",children:"0.1 RON"})})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"software",children:"Software"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Library"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Usage"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://github.com/sajattack/st7735-lcd-rs",children:"ST7735"})}),(0,i.jsx)(t.td,{children:"Display driver for ST7735"}),(0,i.jsx)(t.td,{children:"Used for the display for the Pico Explorer Base"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://github.com/embedded-graphics/embedded-graphics",children:"embedded-graphics"})}),(0,i.jsx)(t.td,{children:"2D graphics library"}),(0,i.jsx)(t.td,{children:"Used for drawing to the display"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"links",children:"Links"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Snake_(video_game_genre)",children:"Snake (Video Game)"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.geeksforgeeks.org/snake-code-cpp/",children:"Snake - Code for C++"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.youtube.com/watch?v=7tRxwx7hZnQ",children:"Youtube link for custom KiCad schematic"})}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,n.M)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},49548:(e,t,r)=>{r.d(t,{c:()=>i});const i=r.p+"assets/images/KiCad-319f06b95fd06fcb885fc89ff31daa67.png"},48588:(e,t,r)=>{r.d(t,{c:()=>i});const i=r.p+"assets/images/Project_Left-f976568cfe7a2c16c60c45fc2336fd27.jpg"},97968:(e,t,r)=>{r.d(t,{c:()=>i});const i=r.p+"assets/images/Project_Right-13322fe2384cedea72d5469a52106002.jpg"},47044:(e,t,r)=>{r.d(t,{c:()=>i});const i=r.p+"assets/images/Project_architecture-f7302aa074bf10337d3b077883bb808d.png"},82748:(e,t,r)=>{r.d(t,{c:()=>i});const i=r.p+"assets/images/Project_up-5f29c827730c4574ef093fc6ff0fa040.jpg"},4552:(e,t,r)=>{r.d(t,{I:()=>o,M:()=>a});var i=r(11504);const n={},s=i.createContext(n);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);