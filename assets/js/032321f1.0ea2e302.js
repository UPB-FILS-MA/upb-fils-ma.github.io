"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8921],{49921:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>o,frontMatter:()=>c,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"project/2024/roman.gulida/index","title":"Cryptocurrency price tracker","description":"Rust-based cryptocurrency price tracker with alerts and web interface","source":"@site/versioned_docs/version-fils_en/project/2024/roman.gulida/index.md","sourceDirName":"project/2024/roman.gulida","slug":"/project/2024/roman.gulida/","permalink":"/docs/fils_en/project/2024/roman.gulida/","draft":false,"unlisted":false,"editUrl":"https://github.com/UPB-PMRust/upb-pmrust.github.io/edit/main/website/versioned_docs/version-fils_en/project/2024/roman.gulida/index.md","tags":[],"version":"fils_en","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Controller","permalink":"/docs/fils_en/project/2024/robert.leonte/"},"next":{"title":"VitalTrack: Wearable Fitness and Health Monitor","permalink":"/docs/fils_en/project/2024/s_m.takdeer/"}}');var n=i(74848),s=i(28453);const c={},a="Cryptocurrency price tracker",d={},h=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 6 - 12 May",id:"week-6---12-may",level:3},{value:"Week 7 - 19 May",id:"week-7---19-may",level:3},{value:"Week 20 - 26 May",id:"week-20---26-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function l(e){const r={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"cryptocurrency-price-tracker",children:"Cryptocurrency price tracker"})}),"\n",(0,n.jsx)(r.p,{children:"Rust-based cryptocurrency price tracker with alerts and web interface"}),"\n",(0,n.jsxs)(r.admonition,{type:"info",children:[(0,n.jsx)(r.mdxAdmonitionTitle,{}),(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Author"}),": Gulida Roman ",(0,n.jsx)(r.br,{}),"\n",(0,n.jsx)(r.strong,{children:"GitHub Project Link"}),": ",(0,n.jsx)(r.a,{href:"https://github.com/UPB-FILS-MA/project-roman-gulida",children:"https://github.com/UPB-FILS-MA/project-roman-gulida"})]})]}),"\n",(0,n.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"A cryptocurrency price tracker built with Rust on a Raspberry Pi Pico WH, featuring a screen for monitoring real-time prices and daily percentage changes. It has a switch button for toggling between different currencies and provides price alerts with a buzzer. The project also includes a web application for remote monitoring."}),"\n",(0,n.jsx)(r.h2,{id:"motivation",children:"Motivation"}),"\n",(0,n.jsx)(r.p,{children:"I've been interested in cryptocurrencies for a long time and use price tracking apps regularly. I thought it would be awesome to build my own monitoring system with a microcontroller. This project lets me create a simple tracker with alerts for buying on desired price. Plus, it's a fun way to combine my passion for crypto with hardware and coding."}),"\n",(0,n.jsx)(r.h2,{id:"architecture",children:"Architecture"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"Architecture",src:i(86798).A+"",width:"1416",height:"671"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Components"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Data Source:\nThe primary source of cryptocurrency data is the CoinMarketCap API. This is where the application fetches real-time prices and daily percentage changes for various cryptocurrencies."}),"\n",(0,n.jsx)(r.li,{children:"Microcontroller:\nThe Raspberry Pi Pico WH serves as the central processing unit, managing data retrieval, handling logic, and interfacing with other components."}),"\n",(0,n.jsx)(r.li,{children:"Display Screen:\nA ST7735 LCD screen connected to the Pico WH shows the cryptocurrency price and daily percentage change. This is the main visual output for the tracker."}),"\n",(0,n.jsx)(r.li,{children:"Price Alert Buzzer:\nA buzzer that emits an audible alert when a price threshold is reached. This is connected to the Pico WH and is activated based on predefined conditions."}),"\n",(0,n.jsx)(r.li,{children:"Switch for Currency Selection:\nA toggle switch that allows the user to toggle between different cryptocurrencies. This connects to the Pico WH and interacts with the display and data-fetching logic."}),"\n",(0,n.jsx)(r.li,{children:"Web Server and Web Page:\nA web server running on the Pico WH serves a simple web page. This web page allows remote monitoring of prices and setting of price alerts."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Connections and Flow"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"The Pico W fetches data from the CoinMarketCap API at regular intervals, typically using HTTP requests. This data is processed to extract the relevant price and daily percentage change."}),"\n",(0,n.jsx)(r.li,{children:"The screen is updated with the latest data, displaying the current cryptocurrency price and daily change."}),"\n",(0,n.jsx)(r.li,{children:"The toggle switch allows users to select which cryptocurrency to track, changing the request to the CoinMarketCap API accordingly."}),"\n",(0,n.jsx)(r.li,{children:"The buzzer is triggered when price alerts are activated. The alert thresholds are set via the web page, which communicates with the Pico WH through the web server."}),"\n",(0,n.jsx)(r.li,{children:"The web server running on the Pico WH allows users to access the tracker remotely through a web page, providing a convenient interface for monitoring prices and configuring alerts."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"log",children:"Log"}),"\n",(0,n.jsx)(r.h3,{id:"week-6---12-may",children:"Week 6 - 12 May"}),"\n",(0,n.jsx)(r.p,{children:"I received the hardware package, verified its contents, and started assembling the components."}),"\n",(0,n.jsx)(r.h3,{id:"week-7---19-may",children:"Week 7 - 19 May"}),"\n",(0,n.jsx)(r.p,{children:"I completed the hardware assembly. I finished the KiCad schematic and began developing the software. This involved work with LCD and creating structs CoinData and MarketData."}),"\n",(0,n.jsx)(r.h3,{id:"week-20---26-may",children:"Week 20 - 26 May"}),"\n",(0,n.jsx)(r.p,{children:"I decided to change the API from CoinMarketCap to CoinGecko, which would be more comfortable and would not have limitations."}),"\n",(0,n.jsx)(r.p,{children:"On a software part, I have implemented a switch button, buzzer, LCD initialization and established Wi-Fi connection on a raspberry pi. I have wrote code for fetching data about bitcoin and ethereum from CoinGecko and displaying on the screen, also if the switch button would be pressed, we would see a switch between displaying currency."}),"\n",(0,n.jsx)(r.h2,{id:"hardware",children:"Hardware"}),"\n",(0,n.jsx)(r.p,{children:"In my project I used a 1.8-inch SPI LCD with the ST7735 controller (128 x 160 px) to display cryptocurrency prices and daily percentage changes. The central microcontroller is the Raspberry Pi Pico WH. I used a breadboard for prototyping, a 3V active buzzer for auditory price alerts, toggle switch for switching between currencies and jumper wires to connect everything."}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:['Display(data would be displayed in format "st7735 Pin -> Raspberry Pi Pin"):',"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"VCC -> 3V3(OUT), pin 36"}),"\n",(0,n.jsx)(r.li,{children:"SCL -> GPIO 10, pin 14"}),"\n",(0,n.jsx)(r.li,{children:"SDA -> GPIO 11, pin 15"}),"\n",(0,n.jsx)(r.li,{children:"RES -> GPIO 12, pin 16"}),"\n",(0,n.jsx)(r.li,{children:"DC -> GPIO 8, pin 11"}),"\n",(0,n.jsx)(r.li,{children:"CS -> GPIO 9, pin 12"}),"\n",(0,n.jsx)(r.li,{children:"GND -> pin 38"}),"\n",(0,n.jsx)(r.li,{children:"BL -> None"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.li,{children:"Buzzer. The buzzer is connected to the GPIO 0(pin 1) and ground(pin3)."}),"\n",(0,n.jsx)(r.li,{children:"Push button. Pushbutton switch is connected to the GPIO 3(pin 5) and ground(pin 8)."}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["Images of the physical hardware and connections:\n",(0,n.jsx)(r.img,{alt:"hardware1",src:i(74118).A+"",width:"1280",height:"866"}),"\n",(0,n.jsx)(r.img,{alt:"hardware2",src:i(1873).A+"",width:"1280",height:"960"})]}),"\n",(0,n.jsx)(r.h3,{id:"schematics",children:"Schematics"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"KiCad",src:i(54393).A+"",width:"1346",height:"874"})}),"\n",(0,n.jsx)(r.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Device"}),(0,n.jsx)(r.th,{children:"Usage"}),(0,n.jsx)(r.th,{children:"Price"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/raspberry-pi-pico.html",children:"Rapspberry Pi Pico WH"})}),(0,n.jsx)(r.td,{children:"The microcontroller"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://www.optimusdigital.ro/en/raspberry-pi-boards/12395-raspberry-pi-pico-wh.html?search_query=raspberry+pi+pico+WH&results=34",children:"39 RON"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://www.displayfuture.com/Display/datasheet/controller/ST7735.pdf",children:"LCD Display"})}),(0,n.jsx)(r.td,{children:"Display price and daily change"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://www.optimusdigital.ro/en/lcds/3554-modul-lcd-de-18-cu-spi-i-controller-st7735-128x160-px.html?search_query=ST7735&results=13",children:"30 RON"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://www.mouser.com/datasheet/2/400/ef532_ps-13444.pdf",children:"Active Buzzer"})}),(0,n.jsx)(r.td,{children:"Price alert"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://www.optimusdigital.ro/en/buzzers/635-3v-active-buzzer.html?search_query=active+buzzer&results=16",children:"1.5 RON"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://busboard.com/documents/datasheets/BPS-DAT-(KIT-BB830+SB830)",children:"Breadboard"})}),(0,n.jsx)(r.td,{children:"The physical base of the project"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://www.optimusdigital.ro/en/breadboards/8-breadboard-hq-830-points.html",children:"10 RON"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://ro.mouser.com/datasheet/2/58/BPS_DAT__ZW_10__Datasheet-1282929.pdf",children:"Jumper Wires"})}),(0,n.jsx)(r.td,{children:"Connect components"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://www.optimusdigital.ro/en/wires-with-connectors/887-set-fire-tata-tata-10p-15-cm.html?search_query=jumper+wires&results=100",children:"4 RON"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://www.optimusdigital.ro/en/buttons-and-switches/8930-miniature-side-toggle-switch-with-5-mm-handle.html?search_query=toggle+switch&results=31",children:"Toggle Switch"})}),(0,n.jsx)(r.td,{children:"Switch between cryptocurrencies"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://www.optimusdigital.ro/en/buttons-and-switches/8930-miniature-side-toggle-switch-with-5-mm-handle.html?search_query=toggle+switch&results=31",children:"0.5 RON"})})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"software",children:"Software"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Library"}),(0,n.jsx)(r.th,{children:"Description"}),(0,n.jsx)(r.th,{children:"Usage"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://github.com/rust-embedded/embedded-hal",children:"embedded-hal"})}),(0,n.jsx)(r.td,{children:"A Hardware Abstraction Layer (HAL) for embedded systems"}),(0,n.jsx)(r.td,{children:"Interaction with LCD using SPI"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://github.com/drogue-iot/reqwless",children:"reqwless"})}),(0,n.jsx)(r.td,{children:"HTTP Client"}),(0,n.jsx)(r.td,{children:"Retrieve cryptocurrency prices and other relevant data from a remote server"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy-rs"})}),(0,n.jsx)(r.td,{children:"Modern embedded framework, using Rust and async."}),(0,n.jsx)(r.td,{children:"GPIO, PWM, Concurrency and Synchronization, Networking, Peripheral Interfaces"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://github.com/rust-embedded/heapless",children:"heapless"})}),(0,n.jsxs)(r.td,{children:["Heapless, ",(0,n.jsx)(r.code,{children:"static"})," friendly data structures"]}),(0,n.jsx)(r.td,{children:"Buffers for Network Data, collections to manage data"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://github.com/knurling-rs/defmt",children:"defmt"})}),(0,n.jsx)(r.td,{children:"Efficient, deferred formatting for logging on embedded systems"}),(0,n.jsx)(r.td,{children:"Initialization and Setup Logs,Periodic Updates, Error Handling"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://github.com/serde-rs/serde",children:"serde"})}),(0,n.jsx)(r.td,{children:"Serialization framework for Rust"}),(0,n.jsx)(r.td,{children:"Define Rust structs to match the JSON structure expected from the API responses"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://github.com/embedded-graphics/embedded-graphics",children:"embedded-graphics"})}),(0,n.jsx)(r.td,{children:"A no_std graphics library for embedded applications"}),(0,n.jsx)(r.td,{children:"Display data about crypto on LCD"})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"links",children:"Links"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://api.coingecko.com/api/v3/coins/bitcoin",children:"CoinGecko Bitcoin API"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://api.coingecko.com/api/v3/coins/ethereum",children:"CoinGecko Ethereum API"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://youtu.be/A0a5Z3-OPsM?si=p2yMHpqUisFPEZ5q",children:"Idea"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://youtu.be/hHtGN_JzoP8?si=PXXfVYSGVjHWPlea",children:"Inspiration"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://coinmarketcap.com/api/",children:"CoinMarketCap API"})}),"\n"]})]})}function o(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},54393:(e,r,i)=>{i.d(r,{A:()=>t});const t=i.p+"assets/images/KiCad_schematic-61fd013aa4aa71e9323b25105f708c33.png"},86798:(e,r,i)=>{i.d(r,{A:()=>t});const t=i.p+"assets/images/architecture-da1a4773b668171ceec493813eafb10c.jpg"},74118:(e,r,i)=>{i.d(r,{A:()=>t});const t=i.p+"assets/images/hardware1-57ee1fbd807280cae5636519aa55a82f.jpg"},1873:(e,r,i)=>{i.d(r,{A:()=>t});const t=i.p+"assets/images/hardware2-d9636963d0814a083ae2f66c0c13c86b.jpg"},28453:(e,r,i)=>{i.d(r,{R:()=>c,x:()=>a});var t=i(96540);const n={},s=t.createContext(n);function c(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);